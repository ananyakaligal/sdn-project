name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Manager Dependencies
        run: |
          cd apps/manager
          npm install
      
      - name: Install Client Dependencies
        run: |
          cd apps/client
          npm install
      
      - name: Build Client
        run: |
          cd apps/client
          npm run build
      
      - name: Test Manager API
        run: |
          cd apps/manager
          npm test || echo "No tests defined yet"

  build-agents:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push agent images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sdn-inventory-agent:latest ./apps/agents/inventory
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sdn-orders-agent:latest ./apps/agents/orders
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sdn-payments-agent:latest ./apps/agents/payments
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sdn-users-agent:latest ./apps/agents/users
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sdn-notifications-agent:latest ./apps/agents/notifications
          
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-inventory-agent:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-orders-agent:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-payments-agent:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-users-agent:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-notifications-agent:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build-agents]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Kubernetes
        run: |
          echo "Kubernetes deployment would go here"
          echo "kubectl apply -f k8s/"
