name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Manager Dependencies
        run: |
          cd apps/manager
          npm install
      
      - name: Install Client Dependencies
        run: |
          cd apps/client
          npm install
      
      - name: Build Client
        run: |
          cd apps/client
          npm run build
      
      - name: Test Manager API
        run: |
          cd apps/manager
          timeout 10s npm start &
          sleep 5
          curl -f http://localhost:3001/health || echo "Manager API health check failed"
          pkill -f "node index.js" || true

  build-agents:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
      
      - name: Build agent images
        run: |
          echo "Building inventory agent..."
          docker build -t sdn-inventory-agent:latest ./apps/agents/inventory
          echo "Building orders agent..."
          docker build -t sdn-orders-agent:latest ./apps/agents/orders
          echo "Building payments agent..."
          docker build -t sdn-payments-agent:latest ./apps/agents/payments
          echo "Building users agent..."
          docker build -t sdn-users-agent:latest ./apps/agents/users
          echo "Building notifications agent..."
          docker build -t sdn-notifications-agent:latest ./apps/agents/notifications
          echo "All agent images built successfully"
          
          # Test that the images can start
          echo "Testing agent containers..."
          docker run --rm -d --name test-inventory sdn-inventory-agent:latest
          sleep 2
          docker stop test-inventory || true
          echo "Agent test completed"
      
      - name: Push to DockerHub (if credentials available)
        run: |
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] && [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "Pushing images to DockerHub..."
            docker tag sdn-inventory-agent:latest ${{ secrets.DOCKERHUB_USERNAME }}/sdn-inventory-agent:latest
            docker tag sdn-orders-agent:latest ${{ secrets.DOCKERHUB_USERNAME }}/sdn-orders-agent:latest
            docker tag sdn-payments-agent:latest ${{ secrets.DOCKERHUB_USERNAME }}/sdn-payments-agent:latest
            docker tag sdn-users-agent:latest ${{ secrets.DOCKERHUB_USERNAME }}/sdn-users-agent:latest
            docker tag sdn-notifications-agent:latest ${{ secrets.DOCKERHUB_USERNAME }}/sdn-notifications-agent:latest
            
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-inventory-agent:latest
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-orders-agent:latest
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-payments-agent:latest
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-users-agent:latest
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/sdn-notifications-agent:latest
            echo "Successfully pushed to DockerHub"
          else
            echo "DockerHub credentials not available, skipping push"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build-agents]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Kubernetes
        run: |
          echo "Kubernetes deployment would go here"
          echo "kubectl apply -f k8s/"
